/* 춘 대학교 실습 */
-- 1. 춘 기술대학교 학과 이름 계열 표시, 칼럼명 학과명 계열
SELECT DEPARTMENT_NAME "학과명" , CATEGORY "계열" FROM TB_DEPARTMENT;

--2. 학과의 학과 정원 조회
SELECT DEPARTMENT_NAME || ' 의 정원은 ' || CAPACITY || ' 명 입니다.'
FROM TB_DEPARTMENT;

--국문학과 다니는 여학생 중 현재 휴학중인 여학생
 SELECT S.* FROM TB_STUDENT S ,TB_DEPARTMENT D
 WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO AND D.DEPARTMENT_NAME LIKE '%국문학과%'
 AND S.ABSENCE_YN = 'Y' AND STUDENT_SSN LIKE '%-2%';
 
 -- 입학 정원 20명이상 30명 이하 학과 이름 계열
 SELECT D.DEPARTMENT_NAME "학과 명", D.CATEGORY "계열", D.CAPACITY "입학 정원" ,( SELECT COUNT(*) FROM TB_STUDENT S
 WHERE s.department_no = D.DEPARTMENT_NO
 )"현재 인원 수" 
 FROM TB_DEPARTMENT D
 WHERE D.CAPACITY BETWEEN 20 AND 30;
 
 --춘 기술대학교는 모든 교수들이 소속 학과가 존재
 -- 총장의 이름을 알아낼 수 있는 방법은
SELECT PROFESSOR_NAME FROM TB_PROFESSOR WHERE DEPARTMENT_NO IS NULL;

-- 수강신청을 하려고 한다 선수과목이 존재하는 과목은?
SELECT C1.CLASS_NAME, 
(SELECT CLASS_NAME FROM TB_CLASS C2 WHERE C1.PREATTENDING_CLASS_NO = c2.class_no)
"선수 과목 명" 
FROM TB_CLASS C1 WHERE preattending_class_no IS NOT NULL;

--4번
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO IN('A513079','A513090','A513091','A513110','A51119');

--9번
SELECT S.STUDENT_NO, S.STUDENT_NAME, TO_CHAR(S.ENTRANCE_DATE,'YYYY') "입학연도" FROM TB_STUDENT S
ORDER BY S.ENTRANCE_DATE DESC;

--10번
SELECT * FROM TB_PROFESSOR
--WHERE LENGTH(PROFESSOR_NAME) != 3;
WHERE PROFESSOR_NAME NOT LIKE '___';

--14번 2000년도 이후 입학자들은 학번이 A로 시작한다. 2000년도 이전 학번을 받는 학생들의 학번 이름
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

--15번 한아름 학생 학점 총 평점 구하기
SELECT STUDENT_NAME, STUDENT_NO, (
SELECT ROUND(AVG(POINT),2) FROM TB_GRADE G
WHERE g.student_no = s.student_no
) "학점 총 평점"
FROM TB_STUDENT S
WHERE STUDENT_NAME = '한아름';

--17 지도교수 배정받지 못한 학생 수 
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--18 학번이 A112113 인 김고운 학생의 연도별 평점을 구하시오
SELECT STUDENT_NAME, S.STUDENT_NO, SUBSTR(TERM_NO,1,4) "연도",AVG(G.POINT) "학점 평점"
FROM TB_STUDENT S, TB_GRADE G
WHERE S.STUDENT_NAME = '김고운' AND S.STUDENT_NO = G.STUDENT_NO
GROUP BY  STUDENT_NAME, S.STUDENT_NO, SUBSTR(TERM_NO,1,4)
ORDER BY SUBSTR(TERM_NO,1,4);

--20 동명이인 학생들 이름, 동명인 수
SELECT S1.STUDENT_NAME, COUNT(*)
FROM TB_STUDENT S1
GROUP BY S1.STUDENT_NAME
HAVING COUNT(*)>1
ORDER BY COUNT(*) DESC;





